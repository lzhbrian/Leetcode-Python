# 113 Path Sum II

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def pathSum(self, root, sum):
        """
        :type root: TreeNode
        :type sum: int
        :rtype: List[List[int]]
        """
        return self.helper(root, sum, [], [])
    
    def helper(self, root, s, lists, ans):
        if root:
            l = lists[:]
            l.append(root.val)
            if not root.left and not root.right and sum(l)==s:
                ans.append(l)
            ans = self.helper(root.left, s, l, ans)
            ans = self.helper(root.right, s, l, ans)
        return ans
