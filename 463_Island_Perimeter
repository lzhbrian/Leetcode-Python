# 463 Island Perimeter

class Solution(object):
    
    def Calc_contribution(self, grid, x, y):
        if(grid[x][y]==0):
            return 0
        
        max_x = len(grid)
        max_y = len(grid[0])
        
        # up: grid[x-1][y]
        # down: grid[x+1][y]
        # left: grid[x][y-1]
        # right: grid[x][y+1]
        ans = 0
        
        if (x-1 < 0) or (x-1 >= 0 and grid[x-1][y] == 0):
            ans += 1
            
        if (x+1 >= max_x) or ( x+1 < max_x and grid[x+1][y] == 0):
            ans += 1
        if (y-1 < 0) or (y-1 >= 0 and grid[x][y-1] == 0):
            ans += 1
        if (y+1 >= max_y) or (y+1 < max_y and grid[x][y+1] == 0):
            ans += 1    
        return ans
        
    
    def islandPerimeter(self, grid):
        """
        :type grid: List[List[int]]
        :rtype: int
        """
        
        max_x = len(grid)
        max_y = len(grid[0])
        
        ans = 0
        
        for i in range(max_x):
            for j in range(max_y):
                ans += self.Calc_contribution(grid,i,j)
        
        return ans
        
        
        
        
        
        
        
        
        
        
        
        