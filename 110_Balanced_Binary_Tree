# 110 Balanced Binary Tree

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):

	def maxDepth(self, root):
		"""
		:type root: TreeNode
		:rtype: int
		"""
		if not root:
			return 0
		if (not root.left and not root.right):
			return 1
		
		left = right = 0
		
		if root.left:
			left = self.maxDepth(root.left) + 1
		if root.right:
			right = self.maxDepth(root.right) + 1
		
		return max(left,right)

	def isBalanced(self, root):
		"""
		:type root: TreeNode
		:rtype: bool
		"""
		
		if root:
		
			this_ans = False
			if abs(self.maxDepth(root.left)-self.maxDepth(root.right))<=1:
				this_ans = True
			return this_ans and self.isBalanced(root.left) and self.isBalanced(root.right)
		
		return True
        